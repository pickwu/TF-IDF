* 本文作者：淼淼兮与怀，本文属FreeBuf原创奖励计划，未经许可禁止转载
0X00 前言
最近使用iPhone x，把人脸识别代入了我们的生活中。前段时间了解了一个Python的一个开元函数库，并对其进行了分析、学习和实践，那么今天我们就来讲解一下如何使用face_recognition这个库来实现简单的人脸识别。
注：以下文章的所有操作都是Windows下实现的。
0x01 正文
人脸识别主要步骤：
face_recognition 库的安装
安装此库，首先需要安装编译dlib,此处我们偷个懒，安装软件Anaconda（大牛绕过），此软件预装了dlib.
安装好后，我们直接通过pip 安装face_recognition库，命令如下
python -m pip install face_recognition
调用一下库，检查是否成功导入
没报错，就是安装成功了。
按照以上办法在安装numpy 和python-opencv 两个库就可以了
通过face_recognition库实现人脸识别
代码如下
# -*- coding: UTF-8 -*- import face_recognition import cv2 import os # 这是一个超级简单（但很慢）的例子，在你的网络摄像头上实时运行人脸识别 # PLEASE NOTE: This example requires OpenCV (the `cv2` library) to be installed only to read from your webcam. # 请注意：这个例子需要安装OpenCV # 具体的演示。如果你安装它有困难，试试其他不需要它的演示。 # 得到一个参考的摄像头# 0（默认） video_capture = cv2.VideoCapture(0) # 加载示例图片并学习如何识别它。 path ="images"#在同级目录下的images文件中放需要被识别出的人物图 total_image=[] total_image_name=[] total_face_encoding=[] for fn in os.listdir(path): #fn 表示的是文件名 total_face_encoding.append(face_recognition.face_encodings(face_recognition.load_image_file(path+"/"+fn))[0]) fn=fn[:(len(fn)-4)]#截取图片名（这里应该把images文件中的图片名命名为为人物名） total_image_name.append(fn)#图片名字列表 while True: # 抓取一帧视频 ret, frame = video_capture.read() # 发现在视频帧所有的脸和face_enqcodings face_locations = face_recognition.face_locations(frame) face_encodings = face_recognition.face_encodings(frame, face_locations) # 在这个视频帧中循环遍历每个人脸 for (top, right, bottom, left), face_encoding in zip(face_locations, face_encodings): # 看看面部是否与已知人脸相匹配。 for i,v in enumerate(total_face_encoding): match = face_recognition.compare_faces([v], face_encoding,tolerance=0.5) name = "Unknown" if match[0]: name = total_image_name[i] break # 画出一个框，框住脸 cv2.rectangle(frame, (left, top), (right, bottom), (0, 0, 255), 2) # 画出一个带名字的标签，放在框下 cv2.rectangle(frame, (left, bottom - 35), (right, bottom), (0, 0, 255), cv2.FILLED) font = cv2.FONT_HERSHEY_DUPLEX cv2.putText(frame, name, (left + 6, bottom - 6), font, 1.0, (255, 255, 255), 1) # 显示结果图像 cv2.imshow('Video', frame) # 按q退出 if cv2.waitKey(1) & 0xFF == ord('q'): break # 释放摄像头中的流 video_capture.release() cv2.destroyAllWindows()
其次还要准备一个images文件夹进行摄像头的人脸比对
成功的效果图我就不贴了。
原理如下：
1.遍历images文件中的图片 2.提取特征脸 3.摄像头每帧提取图片，提取特诊脸 4.遍历特征列表，找出符合特征脸 5.输出名字
1、从特征中找出图片中的人脸
import face_recognition image = face_recognition.load_image_file("your_file.jpg") face_locations = face_recognition.face_locations(image)
2、找到并且控制图像中的脸部特征
import face_recognition image = face_recognition.load_image_file("your_file.jpg") face_landmarks_list = face_recognition.face_landmarks(image)
3、识别照片中的人脸
import face_recognition known_image = face_recognition.load_image_file("biden.jpg") unknown_image = face_recognition.load_image_file("unknown.jpg") biden_encoding = face_recognition.face_encodings(known_image) [0]unknown_encoding = face_recognition.face_encodings(unknown_image) [0]results = face_recognition.compare_faces([biden_encoding], unknown_encoding)
0x02 总结
总的来说，该开源库使得人脸识别的普及实现不再那么的遥远。调用该库，只需几行代码，便可实现人脸识别。有什么问题可以在下面评论讨论哦，各路大牛勿喷。
* 本文作者：淼淼兮与怀，本文属FreeBuf原创奖励计划，未经许可禁止转载