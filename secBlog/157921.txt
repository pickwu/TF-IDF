接着程序用int 0x80来进行输入和输出。
随后，向栈中压入一个字符串，“Let's start the CTF:”，位置则在exit()函数起始地址之上。
程序开始，在栈中保存esp的值和exit()函数的起始地址，然后将eax、ebx、ecx、edx置零。
int 0x80是linux上的系统调用。
在int 0x80中，eax存放系统调用号，其余的几个寄存器存放参数。
在本程序中，ecx指向缓冲区，edx为缓冲区大小，ebx为fd。
程序首先将当前esp的值传给ecx，然后输出此缓冲区内的字符串。
之后，程序在执行输入的时候，并没有更改ecx的值，所以我们输入的字符串会直接覆盖栈中的数据。